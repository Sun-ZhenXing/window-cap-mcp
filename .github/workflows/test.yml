name: Test

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.10', '3.11', '3.12', '3.13']

    steps:
      - uses: actions/checkout@v4

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libwayland-dev libxrandr-dev libxcb1-dev libgbm-dev libxkbcommon-dev \
            libpipewire-0.3-dev pipewire \
            libavcodec-dev libavformat-dev libavutil-dev \
            libswscale-dev libasound2-dev \
            libegl1-mesa-dev

      - name: Install system dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install pkg-config

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true

      - name: Install dependencies
        run: |
          uv sync --all-extras

      - name: Setup Python build environment
        if: runner.os == 'macOS'
        run: |
          python_path=$(which python)
          python_root=$(dirname $(dirname $python_path))
          echo "LDFLAGS=-L${python_root}/lib" >> $GITHUB_ENV
          echo "CFLAGS=-I${python_root}/include/python${{ matrix.python-version }}" >> $GITHUB_ENV
          echo "Using Python from: ${python_root}"
          ls -l ${python_root}/lib/libpython* || true
          ls -l ${python_root}/include/python${{ matrix.python-version }} || true

      - name: Run Rust tests
        run: cargo test --lib --bins

      - name: Build Python extension
        run: cargo build --features python --release

      - name: Run Python tests
        run: |
          uv run pytest tests/ -v

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install system dependencies (Linux)
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libwayland-dev libxrandr-dev libxcb1-dev libgbm-dev libxkbcommon-dev libpipewire-0.3-dev pipewire libegl1-mesa-dev

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --all-features -- -D warnings

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Run ruff
        run: uv run ruff check python/ tests/
